# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# [RC modified]
font pango:System San Francisco Display 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# [RC modified] commentado e posto Rofi
#bindsym $mod+d exec dmenu_run
bindsym $mod+d exec --no-startup-id rofi -show run

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
## Toggle between container layout
#bindsym $mod+w layout toggle all

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


# [RC added]
set $ws1 "1: Web  "
set $ws2 "2: Two"
set $ws3 "3: Three"
set $ws4 "4: Four"
set $ws5 "5: Five"
set $ws6 "6: Six"
set $ws7 "7: Seven"
set $ws8 "8: Eight"
set $ws9 "9: Notes  "
set $ws10 "10: Music  "

# switch to workspace
# [RC modified]
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
# [RC modified]
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# [RC added] assign workspaces to some applications
# WhatsApp Web (tem que estar acima da linha do Chromium principal)
assign [class="Chromium" instance="crx_bpocngoedbjmnmkngoohaccdmidcjjhm"] → $ws9
#assign [class="Chromium"] → $ws1
assign [class="Firefox" window_type="normal"] → $ws1
assign [class="Nightly" window_type="normal"] → $ws1
assign [class="Zim" window_type="normal"] → $ws9
assign [class="Simplenote"] → $ws9
assign [class="VirtualBox"] → $ws6
assign [class="libreoffice-calc"] → $ws7
for_window [class="Spotify"] move to workspace $ws10
assign [class="cantata"] → $ws10
assign [class="Amarok"] → $ws10

# [RC added] Scratchpad
for_window [class="keepassxc" window_type="normal"] move to scratchpad
for_window [class="transmission" window_type="normal"] move to scratchpad

# MPV
for_window [class="mpv"] floating enable, sticky enable, resize set 600 400, move window to position 1300 660
# Firefox - Min Vid experiment
for_window [class="Firefox" instance="Toplevel"] floating enable, sticky enable, resize set 600 400, move window to position 1300 660

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
	# These bindings trigger as soon as you enter the resize mode

	# Pressing left will shrink the window’s width.
	# Pressing right will grow the window’s width.
	# Pressing up will shrink the window’s height.
	# Pressing down will grow the window’s height.
	bindsym j resize shrink width 10 px or 10 ppt
	bindsym k resize grow height 10 px or 10 ppt
	bindsym l resize shrink height 10 px or 10 ppt
	bindsym semicolon resize grow width 10 px or 10 ppt

	# same bindings, but for the arrow keys
	bindsym Left resize shrink width 10 px or 10 ppt
	bindsym Down resize grow height 10 px or 10 ppt
	bindsym Up resize shrink height 10 px or 10 ppt
	bindsym Right resize grow width 10 px or 10 ppt

	# back to normal: Enter or Escape
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# [RC added] variables for later use
set $bg-color 	         #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935
#set $indicator-color     #00ffff

# [RC added] window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          $indicator-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color  $indicator-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color  $indicator-color
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          $indicator-color

# [RC added] borders for new tiling
hide_edge_borders both

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
##	[RC modified]
##   status_command i3status
	#font pango:System San Francisco Display, FontAwesome 10
	##font pango:Source Code Pro, FontAwesome 10
	#position bottom
	#status_command bumblebee-status -m getcrypto spotify pasink memory cpu datetime -p getcrypto.geteth=0 getcrypto.getltc=0 memory.usedonly=true datetime.format='%a %d/%m/%y %H:%M:%S' -t default
	#colors {
		#background $bg-color
		#separator #757575
		##                  border             background         text
		#focused_workspace  $bg-color          $bg-color          $text-color
		#inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		#urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
	#}
#}


# ===== [RC added] TUDO DAQUI PRA BAIXO ====
# Set wallpaper
exec --no-startup-id wallpaper set-random

# Set keyboard layout
# Swap capslock and control. Set it as esc too.
#exec --no-startup-id setxkbmap br -option ctrl:swapcaps
#Control_L
#exec --no-startup-id setxkbmap br
#exec --no-startup-id xcape -e Control_L=Escape
exec --no-startup-id setxkbmap us -variant intl -option eurosign:e
exec --no-startup-id xmodmap.sh

# Workspaces back and forth
#workspace_auto_back_and_forth yes
bindsym $mod+z workspace back_and_forth
bindsym $mod+Shift+z move container to workspace back_and_forth

# Go to next/previous workspace
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Call Rofi with list of windows in alt+tab
bindsym Mod1+Tab exec --no-startup-id rofi -show window

# Jump to urgent window (Arch Wiki)
bindsym $mod+x [urgent=latest] focus

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# The middle button over a titlebar kills the window
bindsym --release button2 kill

# Lock screen shortcut
bindsym $mod+shift+x exec --no-startup-id lock.sh --now
# Auto lock if idle
exec --no-startup-id xautolock -time 3 -locker lock.sh

# Pulse Audio controls
# increase sound volume
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
# decrease sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
# mute sound
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle; exec pkill -RTMIN+10 i3blocks

# Media player controls
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioStop exec --no-startup-id playerctl stop
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Calculator
bindsym XF86Calculator exec --no-startup-id kcalc

# Screenshots
bindsym Print exec --no-startup-id spectacle -f -b
bindsym Alt Print exec --no-startup-id spectacle -a -b
bindsym Shift Print exec --no-startup-id spectacle -rdunst -b

# Launch file manager
bindsym $mod+slash exec --no-startup-id dolphin

# Flash focused window (needs transset-df)
bindsym $mod+q exec --no-startup-id flash_win.sh

# Make window float and sticky (for videos)
bindsym $mod+Shift+y fullscreen disable; floating enable; resize set 600 400; sticky enable; move window to position 1300 660

# Mode for shutdown, suspend etc... (Arch Wiki)
set $Locker lock.sh

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+End mode "$mode_system"


# Autostart
# WM stuff
exec --no-startup-id compton -b
exec --no-startup-id nm-applet
exec --no-startup-id dunst
exec_always --no-startup-id polybar.sh
# Wallet, SSH, encfs
exec --no-startup-id /usr/lib/pam_kwallet_init
exec --no-startup-id encfs.sh zim clipit
exec --no-startup-id ssh-add.sh
# Allows (in KDE software), for instance, saving stuff as root
exec --no-startup-id /usr/lib/polkit-kde/polkit-kde-authentication-agent-1
# Services
exec --no-startup-id redshift-gtk
exec --no-startup-id dropbox
exec --no-startup-id unsplash
# Applications
exec --no-startup-id firefox-nightly
exec --no-startup-id keepassxc
exec --no-startup-id i3-msg "workspace $ws8; exec i3-sensible-terminal"


# i3-gaps
# ====================================================================
# Disable windows titlebars (necessary)
for_window [class="^.*"] border pixel 3

set $gaps_inner 30
set $gaps_outer 5
gaps inner $gaps_inner
gaps outer $gaps_outer

# Disable when one window
#smart_gaps on

# Keybind for changing gaps size (adapted from documentation)
set $mode_gaps Gaps: (U/D) outer, (L/R) inner, (n) none, (d) default
set $mode_gaps_all Gaps (all): (U/D) outer, (L/R) inner, (n) none, (d) default
bindsym $mod+g mode "$mode_gaps"
bindsym $mod+Shift+g mode "$mode_gaps_all"

mode "$mode_gaps" {
	bindsym n	   gaps inner current set 0; gaps outer current set 0
	bindsym d      gaps inner current set $gaps_inner; gaps outer current set $gaps_outer
	bindsym Right  gaps inner current plus 5
	bindsym Left   gaps inner current minus 5
	bindsym Up     gaps outer current plus 5
	bindsym Down   gaps outer current minus 5

	bindsym Return mode "default"
	bindsym Escape mode "default"
}
mode "$mode_gaps_all" {
	bindsym n	   gaps inner all set 0; gaps outer all set 0
	bindsym d      gaps inner all set $gaps_inner; gaps outer all set $gaps_outer
	bindsym Right  gaps inner all plus 5
	bindsym Left   gaps inner all minus 5
	bindsym Up     gaps outer all plus 5
	bindsym Down   gaps outer all minus 5

	bindsym Return mode "default"
	bindsym Escape mode "default"
}

# Set custom gaps for some workspaces
#exec i3-msg "workspace $ws9; gaps outer current set 0; gaps inner current set 50; workspace back_and_forth"


#  vim: filetype=i3 sw=2 ts=4
