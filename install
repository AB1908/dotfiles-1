#!/usr/bin/env bash
#
# Dotfiles installation script.
#
# Copyright (C) 2020 Rafael Cavalcanti - rafaelc.org
# Licensed under GPLv3

set -euo pipefail

readonly SCRIPT_NAME=$(basename "${0}")
readonly SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

readonly REQUIRED_CMDS=(git stow)

main() {
  check_cmd

  # Initialize submodules.
  git submodule update --init --recursive

  rm_conflicts
  mk_dirs

  install_home
  install_host
  install_dconf
}

log() {
  printf "%s\n" "$*" 1>&2
}

check_cmd() {
  for cmd in "${REQUIRED_CMDS[@]}"; do
    if ! command -v "$cmd" >/dev/null; then
      printf "Install %s before running this script.\n" "$cmd"
      exit 1
    fi
  done
}

mk_dirs() {
  # Create directories we don't want Stow to own.
  mkdir -p "$HOME/.config"
  mkdir -p "$HOME/.local/share"
  mkdir -p "$HOME/.vim"

  # Create other directories I use.
  mkdir -p "$HOME/.local/bin"
  mkdir -p "$HOME/.local/opt"
}

# Remove conflicting skel files.
rm_conflicts() {
  local -r conflicts=(".bash_logout" ".bashrc" ".profile")

  for file in "${conflicts[@]}"; do
    if [[ -f "$SCRIPT_DIR/home/$file" && -f "$HOME/$file" && ! -h "$HOME/$file" ]]; then
      rm -v "$HOME/$file"
    fi
  done
}

install_dconf() {
  local -r dconf_dir="${SCRIPT_DIR}/dconf"

  if ! command -v dconf >/dev/null; then
    log "dconf is not installed. Skipping..."
    return 0
  fi

  log "Loading dconf settings..."
  cat "$dconf_dir"/*.conf | dconf load /
}

install_home() {
  log "Doing stow..."
  stow -t ~ home
}

install_host() {
  local -r hosts_dir="${SCRIPT_DIR}/hosts"
  local -r host="$(hostname)"

  [[ -d "${hosts_dir}/$host" ]] || return

  log "Found host specific files. Doing stow..."
  cd "${hosts_dir}"
  stow -t ~ "${host}"
}

main "$@"
