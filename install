#!/usr/bin/env bash
#
# Dotfiles installation script.
#
# Copyright (C) 2020 Rafael Cavalcanti - rafaelc.org
# Licensed under GPLv3

set -euo pipefail

readonly script_name=$(basename "${0}")
readonly script_dir="$(dirname "$(readlink -f "$0")")"

main() {
  check_cmd

  # Initialize submodules.
  git submodule update --init --recursive

  rm_conflicts
  mk_dirs

  do_stow home
  load_dconf
  do_stow_host
}

log() {
  printf "%s\n" "$*" 1>&2
}

check_cmd() {
  for cmd in "(git stow)"; do
    if ! command -v $cmd >/dev/null; then
      printf "Install %s before running this script.\n" "$cmd"
      exit 1
    fi
  done
}

mk_dirs() {
  # Create directories we don't want Stow to own.
  mkdir -p "$HOME/.config"
  mkdir -p "$HOME/.local/share"
  mkdir -p "$HOME/.vim"

  # Create other directories I use.
  mkdir -p "$HOME/.local/bin"
  mkdir -p "$HOME/.local/opt"
}

# Remove conflicting skel files.
rm_conflicts() {
  local conflicts=(".bash_logout" ".bashrc" ".profile")

  for file in "${conflicts[@]}"; do
    if [[ -f "$script_dir/home/$file" && -f "$HOME/$file" && ! -h "$HOME/$file" ]]; then
      rm -v "$HOME/$file"
    fi
  done
}

load_dconf() {
  if ! command -v dconf >/dev/null; then
    log "dconf is not installed. Skipping..."
    return 0
  fi

  log "Loading dconf settings..."
  cat dconf/*.conf | dconf load /
}

do_stow() {
  log "Doing stow for $*..."
  stow -t ~ "$@"
}

do_stow_host() {
  case "$(hostname)" in
    localhost) local host="termux" ;;
    *) local host="$(hostname)" ;;
  esac

  [[ -d "hosts/${host}" ]] || return

  log "Found host specific files."
  cd hosts
  do_stow "${host}"
}

main "$@"
