#!/usr/bin/env bash
#
# Simple screenshot utility.
#
# Usage:
# 1) Run it without arguments to bring up the options on dmenu.
# 2) Run it with the wanted option as the argument.
#
# Dependencies:
# - dmenu
# - maim
# - notify-send
# - xclip
#
# Copyright (C) 2020 Rafael Cavalcanti - rafaelc.org
# Licensed under GPLv3

set -euo pipefail

readonly out_dir="$HOME/Pictures/Screenshots/"
readonly out_file="${out_dir}/Screenshot from $(date +"%d-%m-%Y %H-%M-%S").png"

if [[ ! -d "$out_dir" ]]; then
  mkdir -p "$out_dir"
fi

readonly options=(
  "Full screen"
  "Full screen (clipboard)"
  "Current window"
  "Current window (clipboard)"
  "Selection"
  "Selection (clipboard)"
)

readonly option=${1:-$(printf '%s\n' "${options[@]}" | dmenu -p "Take screenshot of..." -i -l "${#options[@]}")}

case "$option" in
  "Full screen")
    maim "$out_file"
    notify-send "Full screen screenshot saved."
    ;;
  "Full screen (clipboard)")
    maim | xclip -selection clipboard -t image/png
    notify-send "Full screen screenshot copied to clipboard."
    ;;
  "Current window")
    maim -i $(xdotool getactivewindow) "$out_file"
    notify-send "Window screenshot saved."
    ;;
  "Current window (clipboard)")
    maim -i $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
    notify-send "Window screenshot copied to clipboard."
    ;;
  "Selection")
    maim -s "$out_file"
    notify-send "Selection screenshot saved."
    ;;
  "Selection (clipboard)")
    maim -s | xclip -selection clipboard -t image/png
    notify-send "Selection screenshot copied to clipboard."
    ;;
  *)
    printf "Invalid option.\n"
    ;;
esac

