#!/usr/bin/env bash
#
# Copyright (C) 2020 Rafael Cavalcanti - rafaelc.org
# Licensed under GPLv3

readonly sep="|"

truncate() {
  local -r max_len=30
  local -r str="$*"

  if [[ ${#str} -gt $max_len ]]; then
    echo "${str::(( max_len - 3 ))}..."
  else
    echo "$str"
  fi
}

bar_vol() {
  if [[ "$(pulsemixer --get-mute)" == "1" ]]; then
    local -r icon="🔇"
  else
    local -r icon="🔊"
  fi

  printf "%s %3d%%" "${icon}" "$(pulsemixer --get-volume | cut -f 1 -d ' ')"
}

bar_player() {
  local -r status="$(playerctl status)"

  [[ "$status" =~ (Playing|Paused) ]] || return 0

  case $status in
    Playing) local -r icon=;;
    Paused) local -r icon=;;
  esac

  # Calling metadata...
  #   - with --format: prevents mixing multiple players
  #   - only once: prevents racing conditions (mixing prev and next song)
  local -a metadata
  local -r NL=$'\n'
  mapfile -t metadata < <(playerctl metadata --format "{{ artist }}$NL{{ title }}")

  # Truncate long metadata
  local -r artist="$(truncate "${metadata[0]}")"
  local -r title="$(truncate "${metadata[1]}")"

  echo "${icon} ${artist:+$artist -} ${title} ${sep} "
}

bar_time() {
  echo " $(date +"%a, %e/%m (%R)")"
}

bar_mem() {
  echo " $(free -h | awk '/^Mem:/ {print $3}')"
}

bar_temp() {
  echo " CPU: $(sensors | awk '/^Package/ {print substr($4, 2)}')"
}

xsetroot -name " $(bar_player)$(bar_vol) ${sep} $(bar_temp) ${sep} $(bar_mem) ${sep} $(bar_time) "

