#!/usr/bin/env bash
#
# Copyright (C) 2020 Rafael Cavalcanti - rafaelc.org
# Licensed under GPLv3

readonly sep=" "

truncate() {
  local -r max_len=30
  local -r str="$*"

  if [[ ${#str} -gt $max_len ]]; then
    local trunc="${str::(( max_len - 3 ))}"
    trunc="$(sed -e 's/[[:space:]]*$//' <<< "$trunc")" # Trim trailing space
    echo "$trunc..."
  else
    echo "$str"
  fi
}

bar_vol() {
  if [[ "$(pulsemixer --get-mute)" == "1" ]]; then
    local -r icon="üîá"
  else
    local -r icon="üîä"
  fi

  printf "%s %3d%%" "${icon}" "$(pulsemixer --get-volume | cut -f 1 -d ' ')"
}

bar_player() {
  local -r status="$(playerctl status 2>/dev/null)"

  [[ "$status" =~ (Playing|Paused) ]] || return 0

  case $status in
    Playing) local -r icon=ÔÅã;;
    Paused) local -r icon=ÔÅå;;
  esac

  # Calling metadata...
  #   - with --format: prevents mixing multiple players
  #   - only once: prevents racing conditions (mixing prev and next song)
  local -a metadata
  local -r NL=$'\n'
  mapfile -t metadata < <(playerctl metadata --format "{{ artist }}$NL{{ title }}")

  # Truncate long metadata
  local -r artist="$(truncate "${metadata[0]}")"
  local -r title="$(truncate "${metadata[1]}")"

  echo "${icon} ${artist:+$artist -} ${title} ${sep} "
}

bar_time() {
  echo "ÔÅ≥ $(date +"%a, %d/%m %R")"
}

bar_mem() {
  echo "ÔÇÖ $(free -h | awk '/^Mem:/ {print $3}')"
}

bar_temp() {
  echo "Ôãâ $(sensors | awk '/^Package/ {print substr($4, 2)}')"
}


# Retrieves currency value at interval
# Args: the currency code
bar_currency() {
  local -r currency="${1,,}" # lowercase
  local -r interval=60
  local -r cache_dir="$HOME/.cache/dwmbar"
  local -r cache="$cache_dir/currency_$currency"
  local value

  mkdir -p "$cache_dir"
  if [[ ! -e $cache || $(($(date +%s) - $(date +%s -r "$cache"))) -gt $interval ]]; then
    value="$(curl -s rate.sx/"$currency" | awk '/end:/{ print $8 }')"
    value="${value#$}"
    echo "$value" > "$cache"
  else
    value="$(cat "$cache")"
  fi

  echo "$value"
}


bar_crypto() {
  echo "$ $(bar_currency BTC) $(bar_currency ETH) $(bar_currency BAT)"
}

bar_timew() {
  # --skip-dwmbar or we'll get into an infinite loop
  local -r status="$(timew --skip-dwmbar)"

  if [[ $(wc -l <<< "$status") -gt 1 ]]; then
    local -r tag="$(head -1 <<< "$status" | cut -f2- -d' ')"
    echo "üñçÔ∏è $tag $sep "
  fi
}
xsetroot -name " $(bar_player)$(bar_vol) ${sep} $(bar_timew)$(bar_crypto) ${sep} $(bar_temp) ${sep} $(bar_mem) ${sep} $(bar_time) "

