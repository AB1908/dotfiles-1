#
# Shell aliases
#
# Author: Rafael Cavalcanti - rafaelc.org

# Create alias for cd'ing into directory
alias_z() {
	local -r name="$1"
	local -r dir="$2"
	[[ -d "$dir" ]] || return

	alias "$name"="cd \"$dir\""
}

# List files when cd'ing
cd() { builtin cd "$@" && eval $CMD_LS; }

# Also check command after sudo for alias (see man bash)
alias sudo="sudo "
alias watch="watch "

# Increase verbosity and prompt before overwriting (for rm, prompt
# before removing directory or more than 3 files)
alias cp="cp -vir"
alias mv="mv -vi"
alias rm="rm -vI"
alias ln="ln -vi"

# Human-readable output
alias df="df -h"
alias free="free -h"

# Coloured output
# `always` enables color also when piping to less (`auto` doesn't).
alias grep="grep --color=always"
alias egrep="egrep --color=always"
alias fgrep="fgrep --color=always"
alias rgrep="rgrep --color=always"
# Accept color escape sequences
alias less="less -R"

# ls
if command -v exa > /dev/null; then
	CMD_LS="exa --color=auto -aF --group-directories-first"
	alias ls="$CMD_LS"
	alias ll="ls -l --git"
else
	CMD_LS="ls --color=auto -AF --group-directories-first"
	alias ls="$CMD_LS"
	alias ll="ls -l"
fi

# Show timestamp on zsh history
alias history="history -i"

# Shell
alias c="builtin cd && clear"
alias q="exit"
alias :q="exit"
alias x="exit"
history-rank() {
	local n=${1:-10}

	builtin history 0 | \
		awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}' | \
		grep -v "./" | \
		column -c3 -s " " -t | \
		sort -nr | \
		nl | \
		head -n"${n}"
}
take() { mkdir -p $@ && cd ${@:$#}; }

# Copy command from history to clipboard
alias hy="fc -ln -20 | fzf | xclip -selection clipboard"

# Edit
alias e="$EDITOR"
alias ea="$EDITOR $ALIASES"
alias eg="vim +'Files $HOME'"
alias eh="vim +History"
alias ep="vim +Files"
alias ev="$EDITOR ~/.vimrc"
alias exp="$EDITOR ~/.xprofile"
alias ez="$EDITOR $ZDOTDIR/.zshrc"
alias ezp="$EDITOR ~/.zprofile"

# Browsing
alias ..="cd .."
alias_z zb ~/.local/bin
alias_z zd ~/Downloads
alias_z ze ~/Code
alias_z zg ~/.config
alias_z zh ~/Pictures/Screenshots
alias_z zk ~/.kodi
alias_z zk /var/lib/kodi/.kodi
alias_z zm ~/Music
alias_z zn "$NOTES"
alias_z zp ~/Pictures
alias_z zs /sdcard
alias_z zt ~/Sync
alias_z zv ~/Videos
alias_z zy ~/.config/yadm
alias_z zw /var/www
alias_z zw "$WALLPAPERS"
alias_z z8 ~/Documents/RN8\ Sync

# ranger
alias r="ranger"

# z.lua
alias zc="z -c"
alias zu="z -b"
# Make z interactive when run without arguments
unalias z 2> /dev/null
z() {
	[ $# -eq 0 ] && _zlua -I . && return
	_zlua "$@"
}

# Git
alias gd="git diff -- ':!package-lock.json' ':!yarn.lock'"
alias gd1="git diff HEAD~"
alias gd2="git diff HEAD~2"
gfr() { git fetch && git reset --hard origin/$(git rev-parse --abbrev-ref HEAD); }
alias glo="git log --graph --pretty=format:'%Cred%h - %an - %ar %Cblue%d%n  %Cgreen %s%n'"
alias glon="glo --name-only"
alias gw="gh repo view --web"

# yadm
alias ya="yadm add"
alias yau="yadm add -u"
alias yc="yadm commit -v"
alias yc!="yadm commit -v --amend"
alias yco="yadm checkout"
alias yd="yadm diff"
yfr() { yadm fetch && yadm reset --hard origin/$(yadm rev-parse --abbrev-ref HEAD); }
alias yl="yadm pull"
alias ylo="yadm log --graph --pretty=format:'%Cred%h - %an - %ar %Cblue%d%n  %Cgreen %s%n'"
alias ylon="ylo --name-only"
alias yp="yadm push"
alias ypf="yadm push --force-with-lease"
alias yrb="yadm rebase"
alias yrba="yadm rebase --abort"
alias yrbc="yadm rebase --continue"
alias yrbi="yadm rebase -i"
alias yst="yadm status"
alias yw="xdg-open https://github.com/rccavalcanti/dotfiles >/dev/null 2>&1 & disown"
ye() {
	args=${*:-'+GFiles'}
	GIT_DIR=$HOME/.local/share/yadm/repo.git GIT_WORK_TREE=$HOME vim $args
}

# Easier commands
alias cx="chmod +x"
alias ex="atool --extract --each --"
alias f="find . -iname"
alias o="xdg-open"
alias reb="reboot || { echo 'Trying sudo...'; sudo reboot; }"
alias s="ssh"
alias scr="sudo systemctl restart"
alias scs="sudo systemctl start"
alias y="yadm"
if systemctl status kodi > /dev/null 2>&1; then
	alias kr="sudo systemctl restart kodi"
	alias ks="sudo systemctl stop kodi"
fi

# Notes
alias n="notes"
alias nd="notes d"
alias ndr="notes dr"
alias nf="notes f"
alias nj="notes j"
alias njc="notes jc"
alias njr="notes jr"
alias njx="notes jx"
alias nh="notes h"
alias nr="notes r"
alias nt="notes t"

# Taskwarrior
alias t="task"
alias tad="task add"
alias tac="task active"
alias tb="task burndown.daily"
alias tbw="task burndown.weekly"
alias tco="task completed"
alias tct="task completed end:today"
alias tcy="task completed end:yesterday"
alias tcw="task completed end.before:monday end.after:monday-7days"
alias tclw="task completed end.before:monday-7days end.after:monday-14days"
alias tdel="task delete"
alias tdu="task duplicate"
alias tdo="task done"
alias te="task edit"
alias tm="task modify"
alias tp="task limit:page"
alias tsa="task start"
alias tso="task stop"
alias tl="task log"
alias ts="task sync"
alias t0="task limit:0"
alias et="$EDITOR $TASKRC"
alias tt="taskwarrior-tui"
# Print all tasks completed in month yyyy-mm
tcm() {
	[[ $# -eq 0 ]] && echo "tcm yyyy-mm [args...]" && return
	local -r start="$1-01"
	local -r end="$(date -d "$start next month" '+%Y-%m-%d')"
	shift
	task completed end.after:$start end.before:$end "$@"
}

# Timewarrior
alias i="timew"
alias ica="timew cancel"
alias ico="timew continue"
alias idel="timew delete"
alias ijo="timew join"
alias ijo12="timew join @1 @2"
alias ile="timew lengthen"
alias ile1="timew lengthen @1"
alias ish="timew shorten"
alias ish1="timew shorten @1"
alias is="timew summary"
alias islw="timew summary :lastweek"
alias ist="timew summary :day"
alias isy="timew summary :yesterday"
alias isw="timew summary :week"
alias ism="timew summary :month"
alias isa="timew start"
alias iso="timew stop"
alias itr="timew track"
alias it="timew report totals"
alias itlw="timew report totals :lastweek"
alias itt="timew report totals :day"
alias itm="timew report totals :month"
alias itw="timew report totals :week"
alias ity="timew report totals :yesterday"

# journalctl
alias jc="journalctl"
alias jcu="journalctl -u"
alias jcuf="journalctl -f -u"

# Package management
if command -v apt > /dev/null; then
	alias aar="sudo apt autoremove -y"
	alias afh="apt-file search"
	alias ah="apt search"
	alias ama="sudo apt-mark auto"
	alias amm="sudo apt-mark manual"
	alias ai="sudo apt install"
	alias ap="sudo apt purge"
	alias au="sudo apt update"
	alias afu="sudo apt update && sudo apt full-upgrade"
	alias aw="apt show"
fi

# Use bat if available
command -v bat >/dev/null && alias cat="bat"

# TV and HDMI output
tv_off="echo 'standby 0' | cec-client -s"
tv_on="echo 'on 0' | cec-client -s"
if [[ "$HOST" == "pi" ]]; then
	alias tv_off="$tv_off"
	alias tv_on="$tv_on"
else
	alias tv_off="ssh pi -t sh -c \"$tv_off\""
	alias tv_on="ssh pi -t sh -c \"$tv_on\""
fi

# HTTP server
alias hs="python3 -m http.server"

# Find broken links
alias fbl="find . -xtype l"

# Random man page
alias manrand="find /usr/share/man/man1 -type f | shuf | head -1 | sed -E 's#.*/(.*).gz#\1#' | xargs man"

# Record audio
rau() { arecord -vv -f cd | ffmpeg -loglevel 24 -i - "$HOME/Downloads/rec_$(date +%FT%H%M%S).mp3"; }

# Find and stream audio
yta() { mpv --no-keep-open --ytdl-format=bestaudio ytdl://ytsearch:"$*"; }

# List videos from $1 playlist
ytl() { youtube-dl --flat-playlist --dump-json "$1" | jq -r '"https://youtu.be/" + .url'; }

# Download only subtitles
alias ytsub="youtube-dl --all-subs --skip-download"

# Backup vcn
# Use single quotes so date is defined upon use.
alias backup-vcn='ssh vcn sudo tar czf - /boot /etc > pi-vcc_$(date +"%Y-%m-%d_%H-%M-%S").tar.gz'

# Only supported by zsh
if [[ -n "$ZSH_VERSION" ]]; then
	alias ../..="cd ../.."
	alias ../../..="cd ../../.."

	# Global aliases
	alias -g G="| grep"
	alias -g L="| less"
	alias -g LL="|& less"
	alias -g PIPE="|"
	alias -g Y="| xclip -selection clipboard"
	alias -g P="xclip -selection clipboard -out |"
fi

# Termux overrides and additions
if [[ "$HOST" == "localhost" ]]; then
	# Fix aliases that don't work on Busybox
	alias rm="rm -v"
	alias ln="ln -v"
	alias free="free -m"
	unalias grep

	# Backup Termux
	# Use single quotes so date is defined upon use.
	alias backup='tar \
		-C /data/data/com.termux/files \
		-zcf /sdcard/Sync/termux-backup-$(date +"%Y-%m-%d_%H-%M-%S").tar.gz \
		home usr'
fi
